<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="md_pages_utils_logger" kind="page">
    <compoundname>md_pages_utils_logger</compoundname>
    <title>Logging Library</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>for<sp/>the<sp/>tutorials,<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>PRESSIO_LOG_ACTIVE_MIN_LEVEL<sp/>is<sp/>set<sp/>to<sp/>2<sp/>(=info)</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>needed<sp/>to<sp/>include<sp/>the<sp/>logger<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pressio/utils.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">plog<sp/>=<sp/>pressio::log;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>plog::initialize(pressio::logto::terminal);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>recall<sp/>that:</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_TRACE<sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_DEBUG<sp/><sp/><sp/><sp/><sp/>1</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_INFO<sp/><sp/><sp/><sp/><sp/><sp/>2</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_WARN<sp/><sp/><sp/><sp/><sp/><sp/>3</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_ERROR<sp/><sp/><sp/><sp/><sp/>4</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_CRITICAL<sp/><sp/>5</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>PRESSIO_LOG_LEVEL_OFF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight></codeline>
<codeline><highlight class="comment"><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;prints<sp/>because<sp/>info<sp/>is<sp/>==<sp/>PRESSIO_LOG_ACTIVE_MIN_LEVEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_DEBUG(</highlight><highlight class="stringliteral">&quot;this<sp/>should<sp/>NOT<sp/>print<sp/>because<sp/>debug<sp/>&lt;<sp/>PRESSIO_LOG_ACTIVE_MIN_LEVEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_WARN(<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>should<sp/>print<sp/>print<sp/>because<sp/>warn<sp/>&gt;<sp/>PRESSIO_LOG_ACTIVE_MIN_LEVEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_ERROR(</highlight><highlight class="stringliteral">&quot;this<sp/>should<sp/>print<sp/>print<sp/>because<sp/>error<sp/>&gt;<sp/>PRESSIO_LOG_ACTIVE_MIN_LEVEL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>a<sp/>=<sp/>1.1;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;logger<sp/>uses<sp/>fmtlibrary<sp/>so<sp/>you<sp/>can<sp/>do<sp/>a=<sp/>{:.6e}&quot;</highlight><highlight class="normal">,<sp/>a);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>plog::setVerbosity({plog::level::warn});</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>PRESSIOLOG_INFO(<sp/></highlight><highlight class="stringliteral">&quot;this<sp/>should<sp/>NOT<sp/>print<sp/>because<sp/>we<sp/>reset<sp/>min<sp/>level&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>plog::finalize();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pages/utils/logger.md"/>
  </compounddef>
</doxygen>
